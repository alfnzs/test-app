
name: Firebase Deploy

on:
  push:
    branches:
      - main  # Workflow hanya berjalan saat ada push ke branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # Menentukan environment yang digunakan, dalam hal ini Ubuntu terbaru
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout kode dari repository

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Menggunakan Node.js versi 18

      - name: Install dependencies
        run: |
          npm install

      - name: Build the project
        run: |
          npm run build

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        run: |
          firebase deploy --only hosting --token ${{ secrets.FIREBASE_AUTH_TOKEN }}  # Pastikan ada firebase.json di root direktori

      - name: Run Firebase App
        run: |
          echo "Initializing Firebase App with secrets"
          node -e "const { initializeApp } = require('firebase/app'); const { getFirestore } = require('firebase/firestore'); const firebaseConfig = {
            apiKey: process.env.FIREBASE_API_KEY || '${{ secrets.FIREBASE_API_KEY }}',
            authDomain: process.env.FIREBASE_AUTH_DOMAIN || '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            projectId: process.env.FIREBASE_PROJECT_ID || '${{ secrets.FIREBASE_PROJECT_ID }}',
            storageBucket: process.env.FIREBASE_STORAGE_BUCKET || '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
            appId: process.env.FIREBASE_APP_ID || '${{ secrets.FIREBASE_APP_ID }}'
          }; 
          const app = initializeApp(firebaseConfig); 
          const db = getFirestore(app); 
          console.log(db);"
